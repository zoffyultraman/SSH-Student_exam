<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

			   <context:component-scan base-package="com.ite.smvcDemo.dao" />
   <context:component-scan base-package="com.ite.smvcDemo.service" />
			
			<context:property-placeholder location="classpath:jdbc.properties"/>
			
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
  	</bean>	 
	
	<!-- 配置hibernate到spring中-->	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="com.ite.smvcDemo.entity"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
                </prop>
				<prop key="hibernate.show_sql">
					true
                </prop>
			</props>
		</property>
	</bean>
	
	<!--  -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 对@Transactional这个注解进行的驱动，这是基于注解的方式使用事务配置声明 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置事务管理-->	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- 配置登陆拦截器实现登陆控制 -->
     <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/lib/**"/>
			<mvc:exclude-mapping path="/stylesheets/**"/>
			<bean class="com.ite.smvcDemo.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	

	
	
	
  	
</beans>
